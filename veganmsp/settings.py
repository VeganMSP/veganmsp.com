"""
Django settings for the VeganMSP project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os

from pathlib import Path


try:
    from .secrets import *  # pylint: disable=wildcard-import, unused-wildcard-import
except ImportError:
    raise Exception("A secrets.py is required to run this project.") from ImportError


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = APP_SECRET  # pylint: disable=undefined-variable

# SECURITY WARNING: don't run with debug turned on in production!
try:
    env = os.environ["DJANGO_ENVIRONMENT"]
except KeyError:
    env = "Production"

if env.upper() == "DEVELOPMENT":
    DEBUG = True
    ALLOWED_HOSTS = []
elif env.upper() == "TESTING":
    ALLOWED_HOSTS = ["localhost"]
elif env.upper() == "PRODUCTION":
    ALLOWED_HOSTS = ["veganmsp.com"]
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'blog.apps.BlogConfig',
    'info.apps.InfoConfig',
    'pages.apps.PagesConfig',
    'generic',

    'dal',
    'dal_select2',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'invitations',

    'sass_processor',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.sessions',
    'django.contrib.staticfiles',
    'django.forms',

    'django_extensions',
    'mptt',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'veganmsp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

STATIC_ROOT = BASE_DIR / '_static'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
    'sass_processor.finders.CssFinder',
]

SASS_PRECISION = 8

SASS_PROCESSOR_INCLUDE_DIRS = [
    os.path.join(BASE_DIR, 'static/bootstrap/scss'),
]

WSGI_APPLICATION = 'veganmsp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DATABASE_NAME,  # pylint: disable=undefined-variable
        'USER': DATABASE_USER,  # pylint: disable=undefined-variable
        'PASSWORD': DATABASE_PASS,  # pylint: disable=undefined-variable
        'HOST': DATABASE_HOST,  # pylint: disable=undefined-variable
        'PORT': DATABASE_PORT,  # pylint: disable=undefined-variable
    }
}

ACCOUNT_ADAPTER = 'invitations.models.InvitationsAdapter'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

INVITATIONS_ADAPTER = ACCOUNT_ADAPTER
INVITATIONS_INVITATION_ONLY = True
INVITATIONS_ACCEPT_INVITE_AFTER_SIGNUP = True

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # pylint: disable=line-too-long
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # pylint: disable=line-too-long
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # pylint: disable=line-too-long
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # pylint: disable=line-too-long
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Redirect Urls
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# Logging

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# Graphing models

GRAPH_MODELS = {
    'pygraphviz': True,
    'group_models': True,
}
